version: "3.3"

services:
  web:
    build: .
    ports:
      - "8010:8010"
    env_file:
      - .env
    volumes:
     - .:/app
    depends_on:
     - rabbit
     - redis

  rabbit:
    container_name: rabbit
    restart: always
    hostname: rabbit
    image: rabbitmq:3.10.7-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    volumes:
      - /var/lib/rabbitmq/mnesia

  worker1:
    build: .
    command: ./run_celery.sh
    depends_on:
      - rabbit
      - redis
    env_file:
      - .env

  worker2:
    build: .
    command: celery -A celery_manager worker -Q division -l info
    depends_on:
     - rabbit
     - redis
    env_file:
     - .env

  worker3:
    build: .
    command: celery -A celery_manager worker -l info
    depends_on:
      - rabbit
      - redis
    env_file:
      - .env

  celery_beat:
    build: .
    command: celery -A celery_manager beat -l info
    depends_on:
      - rabbit
      - redis
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:latest
    ports:
     - '6379:6379'
     - '16379:16379'

  flower:
    image: mher/flower:latest
    command: celery -A celery flower
    ports:
      - '5555:5555'
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - rabbit
      - redis

  postgres:
    container_name: celery_postgres
    restart: always
    image: postgres:latest
    volumes:
      - /var/lib/postgresql/flask/_data/
    ports:
      - "5434:5434"
    env_file:
      - .env
